__d(function (global, require, module, exports, _dependencyMap) {
  var baseIsEqual = require(_dependencyMap[0], './_baseIsEqual'),
      get = require(_dependencyMap[1], './get'),
      hasIn = require(_dependencyMap[2], './hasIn'),
      isKey = require(_dependencyMap[3], './_isKey'),
      isStrictComparable = require(_dependencyMap[4], './_isStrictComparable'),
      matchesStrictComparable = require(_dependencyMap[5], './_matchesStrictComparable'),
      toKey = require(_dependencyMap[6], './_toKey');

  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  function baseMatchesProperty(path, srcValue) {
    if (isKey(path) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey(path), srcValue);
    }

    return function (object) {
      var objValue = get(object, path);
      return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }

  module.exports = baseMatchesProperty;
});